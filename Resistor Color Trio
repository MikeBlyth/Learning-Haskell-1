-- Resistors 3
import Data.List 

colorValues = [("Black", 0), ("Brown", 1), ("Red", 2), ("Orange", 3), ("Yellow", 4),
    ("Green", 5), ("Blue", 6), ("Violet", 7), ("Grey", 8), ("White", 9)]

cMult :: [(String, (Integer, String))]
cMult = [("Black", (1, "ohms")), ("Brown", (10, "ohms")), ("Red", (100, "ohms")), 
    ("Orange", (1, "kiloohms")), ("Yellow", (10, "kiloohms")),
    ("Green", (100, "kiloohms")), ("Blue", (1, "megohms")), 
    ("Violet", (10, "megohms")), 
    ("Grey", (100, "megohms")), 
    ("White", (1, "gigohms"))]

inputColors = ["Red", "Blue", "Yellow"]

decodeTwo :: [String] -> Maybe Int 
decodeTwo [] = Nothing
decodeTwo [""] = Nothing
decodeTwo [x] = Nothing
decodeTwo (a:b:cs) = fmap (+) (fmap (10*) (colorVal a)) <*> (colorVal b)

colorVal :: String -> Maybe Int
colorVal a = lookup a colorValues 


-- May get (Just n) or Nothing, need to return n or -1

q = lookup "Green" cMult 
v = decodeTwo inputColors 

main = do
  print (decodeTwo inputColors)
  print("*****")

