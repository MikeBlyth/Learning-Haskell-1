module Phone (number) where

number :: String -> Maybe String
number xs = fltr (digits xs)

digits :: String -> String
digits s = addOne $ filter (\x -> not (x `elem` ['+', ' ', '.', '-', '(', ')'])) s

fltr :: String -> Maybe String
fltr s 
  | length s < 11 || (length s > 11) = Nothing
  | head s /= '1' = Nothing
  | any (\x -> not (x `elem` ['0' .. '9'])) s = Nothing
  | s !! 1 < '2' = Nothing
  | s !! 4 < '2' = Nothing
  | otherwise = Just (tail s)

addOne :: String -> String
addOne s
  | length s == 11 = s
  | otherwise = "1" ++ s

e1 = "(023) 456-7890"
e2 = "+1 (223) 256-7590"

main = do
  print $ number e1
  print $ number e2
  print("*****")

{-
    [ Case { description = "cleans the number"
           , input       = "(223) 456-7890"
           , expected    = Just "2234567890"
           }
    , Case { description = "cleans numbers with dots"
           , input       = "223.456.7890"
           , expected    = Just "2234567890"
           }
    , Case { description = "cleans numbers with multiple spaces"
           , input       = "223 456   7890   "
           , expected    = Just "2234567890"
           }
    , Case { description = "invalid when 9 digits"
           , input       = "123456789"
           , expected    = Nothing
           }
    , Case { description = "invalid when 11 digits does not start with a 1"
           , input       = "22234567890"
           , expected    = Nothing
           }
    , Case { description = "valid when 11 digits and starting with 1"
           , input       = "12234567890"
           , expected    = Just "2234567890"
           }
    , Case { description = "valid when 11 digits and starting with 1 even with punctuation"
           , input       = "+1 (223) 456-7890"
           , expected    = Just "2234567890"
           }
    , Case { description = "invalid when more than 11 digits"
           , input       = "321234567890"
           , expected    = Nothing
           }
    , Case { description = "invalid if area code starts with 0 on valid 11-digit number"
           , input       = "1 (023) 456-7890"
           , expected    = Nothing
           }
    , Case { description = "invalid if area code starts with 1 on valid 11-digit number"
           , input       = "1 (123) 456-7890"
           , expected    = Nothing
           }
    , Case { description = "invalid if exchange code starts with 0 on valid 11-digit number"
           , input       = "1 (223) 056-7890"
           , expected    = Nothing
           }
    , Case { description = "invalid if exchange code starts with 1 on valid 11-digit number"
           , input       = "1 (223) 156-7890"
           , expected    = Nothing
           }
    , Case { description = "invalid with letters"
           , input       = "123-abc-7890"
           , expected    = Nothing
           }
    , Case { description = "invalid with punctuations"
           , input       = "123-@:!-7890"
           , expected    = Nothing
           }
    , Case { description = "invalid if area code starts with 0"
           , input       = "(023) 456-7890"
           , expected    = Nothing
           }
    , Case { description = "invalid if area code starts with 1"
           , input       = "(123) 456-7890"
           , expected    = Nothing
           }
    , Case { description = "invalid if exchange code starts with 0"
           , input       = "(223) 056-7890"
           , expected    = Nothing
           }
    , Case { description = "invalid if exchange code starts with 1"
           , input       = "(223) 156-7890"
           , expected    = Nothing
           }
    ]
-}
